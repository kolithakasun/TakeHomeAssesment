name: AWS Deploy Pipeline

on:
  push:
    branches:
      - master

jobs:
  build:
    runs-on: ubuntu-latest

    steps:
    - name: Checkout code
      uses: actions/checkout@v2

    - name: Set up Python
      uses: actions/setup-python@v2
      with:
        python-version: '3.12'

    - name: Install dependencies
      run: |
        ls -al
        python -m venv venv
        source venv/bin/activate
        cd TestApp
        pip install -r requirements.txt

    - name: Run tests
      run: |
        source venv/bin/activate
        export REQUIRED_SETTING="DEV"
        cd TestApp
        chmod +x test.sh
        ./test.sh

    - name: Set up Docker Buildx
      uses: docker/setup-buildx-action@v1

    - name: Build Docker image
      run: cd TestApp && docker build -t assesment:latest .
    
    - name: Check Docker image
      run: docker images

    - name: Log in to Amazon ECR
      id: login-ecr
      uses: aws-actions/amazon-ecr-login@v1
      env:
        AWS_ACCESS_KEY_ID: ${{ secrets.AWS_ACCESS_KEY_ID }}
        AWS_SECRET_ACCESS_KEY: ${{ secrets.AWS_SECRET_ACCESS_KEY }}

    - name: Extract repository URI
      id: ecr
      run: echo "::set-output name=uri::$(aws ecr describe-repositories --repository-names takehomeassesment --query 'repositories[0].repositoryUri' --output text)"
      env:
        AWS_ACCESS_KEY_ID: ${{ secrets.AWS_ACCESS_KEY_ID }}
        AWS_SECRET_ACCESS_KEY: ${{ secrets.AWS_SECRET_ACCESS_KEY }}

    - name: Tag Docker image
      run: docker tag assesment:latest ${{ steps.ecr.outputs.uri }}:latest
    
    - name: Push Docker image to Amazon ECR
      run: docker push ${{ steps.ecr.outputs.uri }}:latest
      env:
        AWS_ACCESS_KEY_ID: ${{ secrets.AWS_ACCESS_KEY_ID }}
        AWS_SECRET_ACCESS_KEY: ${{ secrets.AWS_SECRET_ACCESS_KEY }}

